{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let LibraryBranchService = /*#__PURE__*/(() => {\n  class LibraryBranchService {\n    constructor(http) {\n      this.http = http;\n      this.apiUrl = environment.apiUrl;\n    }\n\n    getLibraryBranches() {\n      return this.http.get(this.apiUrl + '/library');\n    }\n\n    getLibraryBranchBooks(id) {\n      return this.http.get(this.apiUrl + '/library/' + id + '/books');\n    }\n\n    getBooks() {\n      return this.http.get(this.apiUrl + '/book');\n    }\n\n    getBook(id) {\n      return this.http.get(this.apiUrl + '/book/' + id);\n    }\n\n    getBookStock(id) {\n      return this.http.get(this.apiUrl + '/book/' + id + '/stock');\n    }\n\n    getBookLoans(id) {\n      return this.http.get(this.apiUrl + '/book/' + id + '/copies/count');\n    }\n\n    createBook(book, libraryBranches, numberOfCopies) {\n      console.log('called');\n      let body;\n\n      if (libraryBranches && numberOfCopies) {\n        body = {\n          title: book.title,\n          author: book.author,\n          publisher_id: book.publisher_id,\n          number_of_copies: numberOfCopies,\n          library_branches: libraryBranches\n        };\n      } else {\n        body = {\n          title: book.title,\n          author: book.author,\n          publisher_id: book.publisher_id\n        };\n      }\n\n      return this.http.post(this.apiUrl + '/book', body);\n    }\n\n    getPublishers() {\n      return this.http.get(this.apiUrl + '/book/publisher');\n    }\n\n    getLibraryBranchLoanedBooks(id) {\n      return this.http.get(this.apiUrl + '/library/' + id + '/loans');\n    }\n\n    checkoutBook(libraryBranchId, bookCopyId, borrowerId) {\n      return this.http.post(this.apiUrl + '/library/' + libraryBranchId + '/loans', {\n        book_copy_id: bookCopyId,\n        borrower_id: borrowerId\n      });\n    }\n\n    returnBook(bookCopyId) {\n      return this.http.post(this.apiUrl + '/library/loans/return', {\n        book_copy_id: bookCopyId\n      });\n    }\n\n    getBorrowers() {\n      return this.http.get(this.apiUrl + '/borrower');\n    }\n\n  }\n\n  LibraryBranchService.ɵfac = function LibraryBranchService_Factory(t) {\n    return new (t || LibraryBranchService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  LibraryBranchService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LibraryBranchService,\n    factory: LibraryBranchService.ɵfac,\n    providedIn: 'root'\n  });\n  return LibraryBranchService;\n})();","map":null,"metadata":{},"sourceType":"module"}